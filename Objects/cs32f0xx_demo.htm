<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\cs32f0xx_demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\cs32f0xx_demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Wed Aug 03 16:46:21 2022
<BR><P>
<H3>Maximum Stack Usage =        252 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ECR8660_CodeDownload &rArr; cs_start_e2prom_buff_read &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from main.o(i.EXTI0_1_IRQHandler) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from cs32f0xx_int.o(i.HardFault_Handler) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[1a]">I2C1_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[1b]">I2C2_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[7]">LVD_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from cs32f0xx_int.o(i.NMI_Handler) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from cs32f0xx_int.o(i.PendSV_Handler) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[a]">RCU_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[1c]">SPI1_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[1d]">SPI2_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from cs32f0xx_int.o(i.SVC_Handler) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from cs32f0xx_int.o(i.SysTick_Handler) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[22]">SystemInit</a> from system_cs32f0xx.o(i.SystemInit) referenced from startup_cs32f031.o(.text)
 <LI><a href="#[16]">TIM14_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[17]">TIM15_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[18]">TIM16_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[19]">TIM17_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[12]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[14]">TIM2_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[15]">TIM3_IRQHandler</a> from main.o(i.TIM3_IRQHandler) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[1e]">USART1_IRQHandler</a> from main.o(i.USART1_IRQHandler) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[1f]">USART2_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[20]">USART3_8_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[6]">WWDT_IRQHandler</a> from startup_cs32f031.o(.text) referenced from startup_cs32f031.o(RESET)
 <LI><a href="#[23]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cs32f031.o(.text)
 <LI><a href="#[24]">fputc</a> from main.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[21]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[23]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[25]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[97]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[98]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[99]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART3_8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cs32f031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_config
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_systick_config
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clk_freq_get
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_e2prom_buff_read
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_two
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_three
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_one
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_four
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_five
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_compare
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_compare
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_freq_select
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[a2]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[a3]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a4]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[2f]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[26]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a6]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>ECR8660_CodeDownload</STRONG> (Thumb, 214 bytes, Stack size 168 bytes, ecr8660.o(i.ECR8660_CodeDownload))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = ECR8660_CodeDownload &rArr; cs_start_e2prom_buff_read &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_e2prom_buff_read
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ECR8660_Base_Address
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_read_write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>ECR8660_INIT</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ecr8660.o(i.ECR8660_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ECR8660_INIT &rArr; SetECR8660_to_List &rArr; _SetECR8660_to_List &rArr; ECR8660_write &rArr; _ECR8660_Base_Address &rArr; ECR8660_read_write &rArr; SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetECR8660_to_List
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>ECR8660_Read</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ecr8660.o(i.ECR8660_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ECR8660_Read &rArr; _ECR8660_Base_Address &rArr; ECR8660_read_write &rArr; SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ECR8660_Base_Address
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_read_write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freq_set
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetECR8660_to_List
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>ECR8660_SPI_WR</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, ecr8660.o(i.ECR8660_SPI_WR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ECR8660_SPI_WR
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_read_write
</UL>

<P><STRONG><a name="[44]"></a>ECR8660_read_write</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, ecr8660.o(i.ECR8660_read_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ECR8660_read_write &rArr; SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSC_SPI_Write_read
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_SPI_WR
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ECR8660_Base_Address
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_write
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_Read
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
</UL>

<P><STRONG><a name="[4a]"></a>ECR8660_write</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, ecr8660.o(i.ECR8660_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ECR8660_write &rArr; _ECR8660_Base_Address &rArr; ECR8660_read_write &rArr; SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ECR8660_Base_Address
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_read_write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freq_set
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetECR8660_to_List
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_status_get
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_status_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cs32f0xx_int.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cs32f0xx_int.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cs32f0xx_int.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SSC_SPI_Write_read</STRONG> (Thumb, 388 bytes, Stack size 16 bytes, ecr8660.o(i.SSC_SPI_Write_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_read_write
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cs32f0xx_int.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SetECR8660_to_List</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, ecr8660.o(i.SetECR8660_to_List))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SetECR8660_to_List &rArr; _SetECR8660_to_List &rArr; ECR8660_write &rArr; _ECR8660_Base_Address &rArr; ECR8660_read_write &rArr; SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetECR8660_to_List
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_INIT
</UL>

<P><STRONG><a name="[4f]"></a>Sweep_Frequency</STRONG> (Thumb, 500 bytes, Stack size 48 bytes, spi_adc.o(i.Sweep_Frequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Sweep_Frequency &rArr; peak_compare &rArr; spi_read
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_compare
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freq_set
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_freq_select
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, cs32f0xx_int.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timing_delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_cs32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>TIM3_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; tim_interrupt_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_interrupt_status_get
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_interrupt_status_clear
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>Time_Out</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, command.o(i.Time_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Time_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freq_set
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>USART1_IRQHandler</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, main.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; usart_interrupt_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_status_get
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cs32f031.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>_ECR8660_Base_Address</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ecr8660.o(i._ECR8660_Base_Address))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ECR8660_Base_Address &rArr; ECR8660_read_write &rArr; SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ECR8660_Base_Address_Dict_Find
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_read_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_write
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_Read
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
</UL>

<P><STRONG><a name="[5d]"></a>_ECR8660_Base_Address_Dict_Find</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ecr8660.o(i._ECR8660_Base_Address_Dict_Find))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ECR8660_Base_Address
</UL>

<P><STRONG><a name="[4e]"></a>_SetECR8660_to_List</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, ecr8660.o(i._SetECR8660_to_List))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _SetECR8660_to_List &rArr; ECR8660_write &rArr; _ECR8660_Base_Address &rArr; ECR8660_read_write &rArr; SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_write
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_Read
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetECR8660_to_List
</UL>

<P><STRONG><a name="[5e]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a9]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[3f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freq_set
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_freq_select
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_e2prom_buff_read
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetECR8660_to_List
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_two
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_three
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_one
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_four
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_five
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[ab]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[38]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[77]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_freq_select
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ad]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ae]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[64]"></a>adc_i2c_init</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, init.o(i.adc_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = adc_i2c_init &rArr; gpio_mf_config
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb1_periph_clock_enable_ctrl
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ahb_periph_clock_enable_ctrl
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_enable_ctrl
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mf_config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>command_five</STRONG> (Thumb, 746 bytes, Stack size 8 bytes, command.o(i.command_five))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = command_five &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>command_four</STRONG> (Thumb, 690 bytes, Stack size 8 bytes, command.o(i.command_four))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = command_four &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>command_one</STRONG> (Thumb, 518 bytes, Stack size 8 bytes, command.o(i.command_one))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = command_one &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>command_three</STRONG> (Thumb, 634 bytes, Stack size 8 bytes, command.o(i.command_three))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = command_three &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>command_two</STRONG> (Thumb, 578 bytes, Stack size 8 bytes, command.o(i.command_two))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = command_two &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>cs_start_e2prom_buff_read</STRONG> (Thumb, 760 bytes, Stack size 48 bytes, i2c_ee.o(i.cs_start_e2prom_buff_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = cs_start_e2prom_buff_read &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_handle
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_status_get
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_send
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_receive
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
</UL>

<P><STRONG><a name="[75]"></a>cs_start_systick_config</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, systick.o(i.cs_start_systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = cs_start_systick_config &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>default_freq_select</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, spi_adc.o(i.default_freq_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = default_freq_select &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
</UL>

<P><STRONG><a name="[55]"></a>delay</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, systick.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freq_set
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetECR8660_to_List
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>exti0_1_config</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, init.o(i.exti0_1_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = exti0_1_config &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb2_periph_clock_enable_ctrl
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ahb_periph_clock_enable_ctrl
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>exti_init</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, cs32f0xx_exti.o(i.exti_init))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti0_1_config
</UL>

<P><STRONG><a name="[4c]"></a>exti_interrupt_status_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cs32f0xx_exti.o(i.exti_interrupt_status_clear))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[4b]"></a>exti_interrupt_status_get</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cs32f0xx_exti.o(i.exti_interrupt_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>flash_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cs32f0xx_flash.o(i.flash_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>flash_lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cs32f0xx_flash.o(i.flash_lock))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>flash_operation_wait</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, cs32f0xx_flash.o(i.flash_operation_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_operation_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>

<P><STRONG><a name="[7f]"></a>flash_page_erase</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, cs32f0xx_flash.o(i.flash_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_page_erase &rArr; flash_operation_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>flash_status_get</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, cs32f0xx_flash.o(i.flash_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait
</UL>

<P><STRONG><a name="[89]"></a>flash_unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cs32f0xx_flash.o(i.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>flash_word_program</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, cs32f0xx_flash.o(i.flash_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = flash_word_program &rArr; flash_operation_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_status_get
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[52]"></a>freq_set</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, spi_adc.o(i.freq_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = freq_set &rArr; ECR8660_write &rArr; _ECR8660_Base_Address &rArr; ECR8660_read_write &rArr; SSC_SPI_Write_read
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Out
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_write
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_Read
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
</UL>

<P><STRONG><a name="[41]"></a>gpio_bits_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cs32f0xx_gpio.o(i.gpio_bits_reset))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSC_SPI_Write_read
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[42]"></a>gpio_bits_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cs32f0xx_gpio.o(i.gpio_bits_set))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSC_SPI_Write_read
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_write
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_Read
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[83]"></a>gpio_config</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, init.o(i.gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gpio_config &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ahb_periph_clock_enable_ctrl
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>gpio_init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, cs32f0xx_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti0_1_config
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_i2c_init
</UL>

<P><STRONG><a name="[4d]"></a>gpio_input_data_bit_read</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cs32f0xx_gpio.o(i.gpio_input_data_bit_read))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSC_SPI_Write_read
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Out
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
</UL>

<P><STRONG><a name="[67]"></a>gpio_mf_config</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, cs32f0xx_gpio.o(i.gpio_mf_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_mf_config
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_i2c_init
</UL>

<P><STRONG><a name="[73]"></a>i2c_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cs32f0xx_i2c.o(i.i2c_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_e2prom_buff_read
</UL>

<P><STRONG><a name="[72]"></a>i2c_data_send</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cs32f0xx_i2c.o(i.i2c_data_send))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_e2prom_buff_read
</UL>

<P><STRONG><a name="[6a]"></a>i2c_enable_ctrl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cs32f0xx_i2c.o(i.i2c_enable_ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_i2c_init
</UL>

<P><STRONG><a name="[74]"></a>i2c_flag_clear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cs32f0xx_i2c.o(i.i2c_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_e2prom_buff_read
</UL>

<P><STRONG><a name="[71]"></a>i2c_flag_status_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cs32f0xx_i2c.o(i.i2c_flag_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_flag_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_e2prom_buff_read
</UL>

<P><STRONG><a name="[69]"></a>i2c_init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, cs32f0xx_i2c.o(i.i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_i2c_init
</UL>

<P><STRONG><a name="[70]"></a>i2c_transfer_handle</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, cs32f0xx_i2c.o(i.i2c_transfer_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_transfer_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_e2prom_buff_read
</UL>

<P><STRONG><a name="[21]"></a>main</STRONG> (Thumb, 4256 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = main &rArr; ECR8660_CodeDownload &rArr; cs_start_e2prom_buff_read &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_config
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_config
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_flag_clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti0_1_config
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_systick_config
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_two
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_three
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_one
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_four
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_five
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_i2c_init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Out
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_write
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_Read
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_INIT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECR8660_CodeDownload
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7c]"></a>nvic_init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, cs32f0xx_misc.o(i.nvic_init))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti0_1_config
</UL>

<P><STRONG><a name="[53]"></a>peak_compare</STRONG> (Thumb, 150 bytes, Stack size 104 bytes, spi_adc.o(i.peak_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = peak_compare &rArr; spi_read
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
</UL>

<P><STRONG><a name="[65]"></a>rcu_ahb_periph_clock_enable_ctrl</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cs32f0xx_rcu.o(i.rcu_ahb_periph_clock_enable_ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti0_1_config
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_i2c_init
</UL>

<P><STRONG><a name="[66]"></a>rcu_apb1_periph_clock_enable_ctrl</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cs32f0xx_rcu.o(i.rcu_apb1_periph_clock_enable_ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_config
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_i2c_init
</UL>

<P><STRONG><a name="[95]"></a>rcu_apb1_periph_reset_enable_ctrl</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cs32f0xx_rcu.o(i.rcu_apb1_periph_reset_enable_ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_def_init
</UL>

<P><STRONG><a name="[79]"></a>rcu_apb2_periph_clock_enable_ctrl</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cs32f0xx_rcu.o(i.rcu_apb2_periph_clock_enable_ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti0_1_config
</UL>

<P><STRONG><a name="[94]"></a>rcu_apb2_periph_reset_enable_ctrl</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cs32f0xx_rcu.o(i.rcu_apb2_periph_reset_enable_ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_def_init
</UL>

<P><STRONG><a name="[8c]"></a>rcu_clk_freq_get</STRONG> (Thumb, 496 bytes, Stack size 32 bytes, cs32f0xx_rcu.o(i.rcu_clk_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rcu_clk_freq_get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[86]"></a>spi_gpio_init</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, init.o(i.spi_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = spi_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ahb_periph_clock_enable_ctrl
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>spi_read</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, spi_adc.o(i.spi_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_compare
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>spi_write</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, spi_adc.o(i.spi_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_write
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sweep_Frequency
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>syscfg_exti_line_config</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, cs32f0xx_syscfg.o(i.syscfg_exti_line_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = syscfg_exti_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti0_1_config
</UL>

<P><STRONG><a name="[90]"></a>tim_enable_ctrl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cs32f0xx_tim.o(i.tim_enable_ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_config
</UL>

<P><STRONG><a name="[8f]"></a>tim_interrupt_config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cs32f0xx_tim.o(i.tim_interrupt_config))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_config
</UL>

<P><STRONG><a name="[59]"></a>tim_interrupt_status_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cs32f0xx_tim.o(i.tim_interrupt_status_clear))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>tim_interrupt_status_get</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, cs32f0xx_tim.o(i.tim_interrupt_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tim_interrupt_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>tim_pdiv_register_config</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cs32f0xx_tim.o(i.tim_pdiv_register_config))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_config
</UL>

<P><STRONG><a name="[8d]"></a>tim_timer_config</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, cs32f0xx_tim.o(i.tim_timer_config))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_config
</UL>

<P><STRONG><a name="[84]"></a>time_config</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, init.o(i.time_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = time_config &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_timer_config
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_pdiv_register_config
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_interrupt_config
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_enable_ctrl
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb1_periph_clock_enable_ctrl
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>timing_delay_decrement</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, systick.o(i.timing_delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[85]"></a>usart_config</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, init.o(i.usart_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = usart_config &rArr; usart_init &rArr; rcu_clk_freq_get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable_ctrl
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_def_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb2_periph_clock_enable_ctrl
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb1_periph_clock_enable_ctrl
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ahb_periph_clock_enable_ctrl
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mf_config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_config
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>usart_data_recv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cs32f0xx_usart.o(i.usart_data_recv))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>usart_data_send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cs32f0xx_usart.o(i.usart_data_send))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[91]"></a>usart_def_init</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, cs32f0xx_usart.o(i.usart_def_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_def_init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb2_periph_reset_enable_ctrl
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb1_periph_reset_enable_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
</UL>

<P><STRONG><a name="[93]"></a>usart_enable_ctrl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cs32f0xx_usart.o(i.usart_enable_ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
</UL>

<P><STRONG><a name="[82]"></a>usart_flag_status_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cs32f0xx_usart.o(i.usart_flag_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[92]"></a>usart_init</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, cs32f0xx_usart.o(i.usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = usart_init &rArr; rcu_clk_freq_get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clk_freq_get
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
</UL>

<P><STRONG><a name="[88]"></a>usart_interrupt_config</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cs32f0xx_usart.o(i.usart_interrupt_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_interrupt_config
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_config
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>usart_interrupt_status_get</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, cs32f0xx_usart.o(i.usart_interrupt_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart_interrupt_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[76]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, systick.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cs_start_systick_config
</UL>

<P><STRONG><a name="[57]"></a>SetSysClock</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, system_cs32f0xx.o(i.SetSysClock))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[60]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5f]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[63]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[62]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
